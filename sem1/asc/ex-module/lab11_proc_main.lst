     1                                  ; the program computes the factorial of a number and writes to the console the result
     2                                  ; the function factorial is defined in the file factorial.asm
     3                                  bits 32
     4                                  
     5                                  global start
     6                                  
     7                                  import printf msvcrt.dll
     8                                  import exit msvcrt.dll
     9                                  extern printf, exit
    10                                  
    11                                  ; the code defined in factorial.asm will be written here
    12                                  %include "factorial.asm"
     1                              <1> %ifndef _FACTORIAL_ASM_ ; continue if _FACTORIAL_ASM_ is undefined
     2                              <1> %define _FACTORIAL_ASM_ ; make sure that it is defined
     3                              <1>                         ; otherwise, %include allows only one inclusion
     4                              <1> 
     5                              <1> ;define the function
     6                              <1> factorial: ; int _stdcall factorial(int n)
     7 00000000 B801000000          <1>     mov eax, 1
     8 00000005 8B4C2404            <1>     mov ecx, [esp + 4]
     9                              <1>     
    10                              <1>     repeat: 
    11 00000009 F7E1                <1>         mul ecx
    12 0000000B E2FC                <1>     loop repeat ; atention, the case ecx = 0 is not treated!
    13                              <1> 
    14 0000000D C20400              <1>     ret 4 ; in this case, 4 represents the number of bytes that need to be cleared from the stack (the parameter of the function)
    15                              <1> 
    16                              <1> %endif
    13                                  
    14                                  segment data use32 class=data
    15 00000010 666163746F7269616C-     	format_string db "factorial=%d", 10, 13, 0
    15 00000019 3D25640A0D00       
    16                                      
    17                                  
    18                                  
    19                                  segment code use32 class=code
    20                                  start:
    21 00000000 6A06                    	push dword 6
    22 00000002 E8(00000000)            	call factorial
    23                                  
    24 00000007 50                      	push eax
    25 00000008 68[10000000]            	push format_string
    26 0000000D FF15[00000000]          	call [printf]
    27 00000013 83C408                  	add esp, 2*4
    28                                  
    29 00000016 6A00                    	push 0
    30 00000018 FF15[00000000]          	call [exit]
